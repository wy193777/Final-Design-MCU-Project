###############################################################################
#                                                                             #
# IAR C/C++ Compiler V1.30.1.50036 for STM8             14/Mar/2014  14:03:07 #
# Copyright 2010-2011 IAR Systems AB.                                         #
#                                                                             #
#    Source file  =  F:\Skydrive\Final Design\Servo Motor                     #
#                    STM8L\Libraries\STM8L15x_StdPeriph_Driver\src\stm8l15x_r #
#                    st.c                                                     #
#    Command line =  "F:\Skydrive\Final Design\Servo Motor                    #
#                    STM8L\Libraries\STM8L15x_StdPeriph_Driver\src\stm8l15x_r #
#                    st.c" -e -Ol --no_cse --no_unroll --no_inline            #
#                    --no_code_motion --no_tbaa --no_cross_call --debug       #
#                    --code_model small --data_model medium -o                #
#                    "F:\Skydrive\Final Design\Servo Motor STM8L\Debug\Obj\"  #
#                    --dlib_config "D:\IAR Systems\Embedded Workbench         #
#                    6.0\stm8\LIB\dlstm8smn.h" -D STM8L15X_MD -lCN            #
#                    "F:\Skydrive\Final Design\Servo Motor                    #
#                    STM8L\Debug\List\" --diag_suppress Pe177,Pe550 -I        #
#                    "F:\Skydrive\Final Design\Servo Motor                    #
#                    STM8L\Project\Discover\inc\" -I "F:\Skydrive\Final       #
#                    Design\Servo Motor STM8L\Libraries\STM8L15x_StdPeriph_Dr #
#                    iver\inc\" --vregs 16                                    #
#    List file    =  F:\Skydrive\Final Design\Servo Motor                     #
#                    STM8L\Debug\List\stm8l15x_rst.lst                        #
#    Object file  =  F:\Skydrive\Final Design\Servo Motor                     #
#                    STM8L\Debug\Obj\stm8l15x_rst.o                           #
#                                                                             #
#                                                                             #
###############################################################################

F:\Skydrive\Final Design\Servo Motor STM8L\Libraries\STM8L15x_StdPeriph_Driver\src\stm8l15x_rst.c
      1          /**
      2            ******************************************************************************
      3            * @file    stm8l15x_rst.c
      4            * @author  MCD Application Team
      5            * @version V1.4.0
      6            * @date    09/24/2010
      7            * @brief   This file provides all the RST firmware functions.
      8            ******************************************************************************
      9            * @copy
     10            *
     11            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     12            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     13            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     14            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     15            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     16            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     17            *
     18            * <h2><center>&copy; COPYRIGHT 2010 STMicroelectronics</center></h2>
     19            */
     20          
     21          /* Includes ------------------------------------------------------------------*/
     22          
     23          #include "stm8l15x_rst.h"
     24          
     25          /** @addtogroup STM8L15x_StdPeriph_Driver
     26            * @{
     27            */
     28          
     29          /* Private typedef -----------------------------------------------------------*/
     30          /**
     31            * @addtogroup RST_Private_Define
     32            * @{
     33            */
     34          #define RST_CR_MASK  0xD0 /*!< Enable the GPIO */
     35          
     36          /**
     37            * @}
     38            */
     39          
     40          /* Private macro -------------------------------------------------------------*/
     41          /* Private variables ---------------------------------------------------------*/
     42          /* Private function prototypes -----------------------------------------------*/
     43          /* Private Constants ---------------------------------------------------------*/
     44          
     45          /**
     46            * @addtogroup RST_Public_Functions
     47            * @{
     48            */
     49          
     50          
     51          /**
     52            * @brief   Checks whether the specified RST flag is set or not.
     53            * @param   RST_Flag : specify the reset flag to check.
     54            *          This parameter can be a value of @ref RST_FLAG_TypeDef.
     55            * @retval  FlagStatus: status of the given RST flag.
     56            */

   \                                 In section .near_func.text, align 1
     57          FlagStatus RST_GetFlagStatus(RST_FLAG_TypeDef RST_Flag)
     58          {
     59            /* Check the parameters */
     60            assert_param(IS_RST_FLAG(RST_Flag));
     61          
     62            /* Get flag status */
     63          
     64            return ((FlagStatus)((uint8_t)RST->SR & (uint8_t)RST_Flag));
   \                     RST_GetFlagStatus:
   \   000000 C450B1                AND       A, L:0x50b1
   \   000003 81                    RET
     65          }
     66          
     67          /**
     68            * @brief  Clears the specified RST flag.
     69            * @param  RST_Flag : specify the reset flag to clear.
     70            *         This parameter can be a value of @ref RST_FLAG_TypeDef.
     71            * @retval None
     72            */

   \                                 In section .near_func.text, align 1
     73          void RST_ClearFlag(RST_FLAG_TypeDef RST_Flag)
     74          {
     75            /* Check the parameters */
     76            assert_param(IS_RST_FLAG(RST_Flag));
     77          
     78            RST->SR = (uint8_t)RST_Flag;
   \                     RST_ClearFlag:
   \   000000 C750B1                LD        L:0x50b1, A
     79          }
   \   000003 81                    RET
     80          
     81          /**
     82            * @brief  Configures the reset pad as GP output.
     83            * @param  None
     84            * @retval None
     85            */

   \                                 In section .near_func.text, align 1
     86          void RST_GPOutputEnable(void)
     87          {
     88          
     89            RST->CR = RST_CR_MASK;
   \                     RST_GPOutputEnable:
   \   000000 35D050B0              MOV       L:0x50b0, #0xd0
     90          }
   \   000004 81                    RET
     91          
     92          /**
     93            * @}
     94            */
     95          
     96          
     97          /**
     98            * @}
     99            */
    100          
    101          /******************* (C) COPYRIGHT 2010 STMicroelectronics *****END OF FILE****/

   Section sizes:

     Function/Label     Bytes
     --------------     -----
     RST_GetFlagStatus     4
     RST_ClearFlag         4
     RST_GPOutputEnable    5

 
 13 bytes in section .near_func.text
 
 13 bytes of CODE memory

Errors: none
Warnings: none
