###############################################################################
#                                                                             #
# IAR C/C++ Compiler V1.30.1.50036 for STM8             26/Nov/2013  23:33:25 #
# Copyright 2010-2011 IAR Systems AB.                                         #
#                                                                             #
#    Source file  =  F:\Skydrive\Final Design\STM8L-Discovery1\Libraries\STM8 #
#                    L15x_StdPeriph_Driver\src\stm8l15x_irtim.c               #
#    Command line =  "F:\Skydrive\Final Design\STM8L-Discovery1\Libraries\STM #
#                    8L15x_StdPeriph_Driver\src\stm8l15x_irtim.c" -e -Ol      #
#                    --no_cse --no_unroll --no_inline --no_code_motion        #
#                    --no_tbaa --no_cross_call --debug --code_model small     #
#                    --data_model medium -o "F:\Skydrive\Final                #
#                    Design\STM8L-Discovery1\Debug\Obj\" --dlib_config        #
#                    "D:\IAR Systems\Embedded Workbench                       #
#                    6.0\stm8\LIB\dlstm8smn.h" -D STM8L15X_MD -lCN            #
#                    "F:\Skydrive\Final Design\STM8L-Discovery1\Debug\List\"  #
#                    --diag_suppress Pe177,Pe550 -I "F:\Skydrive\Final        #
#                    Design\STM8L-Discovery1\Project\Discover\inc\" -I        #
#                    "F:\Skydrive\Final Design\STM8L-Discovery1\Libraries\STM #
#                    8L15x_StdPeriph_Driver\inc\" --vregs 16                  #
#    List file    =  F:\Skydrive\Final Design\STM8L-Discovery1\Debug\List\stm #
#                    8l15x_irtim.lst                                          #
#    Object file  =  F:\Skydrive\Final Design\STM8L-Discovery1\Debug\Obj\stm8 #
#                    l15x_irtim.o                                             #
#                                                                             #
#                                                                             #
###############################################################################

F:\Skydrive\Final Design\STM8L-Discovery1\Libraries\STM8L15x_StdPeriph_Driver\src\stm8l15x_irtim.c
      1          /**
      2            ******************************************************************************
      3            * @file    stm8l15x_irtim.c
      4            * @author  MCD Application Team
      5            * @version V1.4.0
      6            * @date    09/24/2010
      7            * @brief   This file provides all the IRTIM firmware functions.
      8            ******************************************************************************
      9            * @copy
     10            *
     11            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     12            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     13            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     14            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     15            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     16            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     17            *
     18            * <h2><center>&copy; COPYRIGHT 2010 STMicroelectronics</center></h2>
     19            */
     20          
     21          
     22          /* Includes ------------------------------------------------------------------*/
     23          #include "stm8l15x_irtim.h"
     24          
     25          /** @addtogroup STM8L15x_StdPeriph_Driver
     26            * @{
     27            */
     28          
     29          /* Private typedef -----------------------------------------------------------*/
     30          /* Private define ------------------------------------------------------------*/
     31          /* Private macro -------------------------------------------------------------*/
     32          /* Private variables ---------------------------------------------------------*/
     33          /* Private function prototypes -----------------------------------------------*/
     34          
     35          /**
     36            * @addtogroup IRTIM_Public_Functions
     37            * @{
     38            */
     39          
     40          /**
     41            * @brief  Deinitializes the IRTIM peripheral registers to their default reset values.
     42            * @param  None
     43            * @retval None
     44            */

   \                                 In section .near_func.text, align 1
     45          void IRTIM_DeInit(void)
     46          {
     47            IRTIM->CR = IRTIM_CR_RESET_VALUE;
   \                     IRTIM_DeInit:
   \   000000 350052FF              MOV       L:0x52ff, #0x0
     48          }
   \   000004 81                    RET
     49          
     50          /**
     51            * @brief  Enables or disables the IRTIM peripheral.
     52            * @param  NewState : The new state of the IRTIM peripheral.
     53            *         This parameter can be: ENABLE or DISABLE.
     54            * @retval None
     55            */

   \                                 In section .near_func.text, align 1
     56          void IRTIM_Cmd(FunctionalState NewState)
     57          {
     58            /* Check the parameters */
     59            assert_param(IS_FUNCTIONAL_STATE(NewState));
     60          
     61            /* set or Reset the EN Bit */
     62            if (NewState ==   DISABLE)
   \                     IRTIM_Cmd:
   \   000000 4D                    TNZ       A
   \   000001 2605                  JRNE      L:??IRTIM_Cmd_0
     63            {
     64              IRTIM->CR &= (uint8_t)(~IRTIM_CR_EN) ;
   \   000003 721152FF              BRES      L:0x52ff, #0x0
   \   000007 81                    RET
     65            }
     66            else
     67            {
     68              IRTIM->CR |= IRTIM_CR_EN ;
   \                     ??IRTIM_Cmd_0:
   \   000008 721052FF              BSET      L:0x52ff, #0x0
     69            }
     70          }
   \   00000C 81                    RET
     71          
     72          /**
     73            * @brief  Enables or disables the High sink open drain buffer of the IRTIM peripheral.
     74            * @param  NewState : The new state of the High sink open drain buffer.
     75            *         This parameter can be: ENABLE or DISABLE.
     76            * @retval None
     77            */

   \                                 In section .near_func.text, align 1
     78          void IRTIM_HighSinkODCmd(FunctionalState NewState)
     79          {
     80            /* Check the parameters */
     81            assert_param(IS_FUNCTIONAL_STATE(NewState));
     82          
     83            /* set or Reset the EN Bit */
     84            if (NewState == DISABLE)
   \                     IRTIM_HighSinkODCmd:
   \   000000 4D                    TNZ       A
   \   000001 2605                  JRNE      L:??IRTIM_HighSinkODCmd_0
     85            {
     86              IRTIM->CR &= (uint8_t)(~IRTIM_CR_HSEN) ;
   \   000003 721352FF              BRES      L:0x52ff, #0x1
   \   000007 81                    RET
     87            }
     88            else
     89            {
     90              IRTIM->CR |= IRTIM_CR_HSEN ;
   \                     ??IRTIM_HighSinkODCmd_0:
   \   000008 721252FF              BSET      L:0x52ff, #0x1
     91            }
     92          }
   \   00000C 81                    RET
     93          
     94          /**
     95            * @brief  Checks whether the IRTIM device is enabled or not.
     96            * @param  None
     97            * @retval FunctionalState : state of the IRTIM device.
     98            *         This parameter can be: ENABLE or DISABLE.
     99            */
    100          

   \                                 In section .near_func.text, align 1
    101          FunctionalState IRTIM_GetStatus(void)
    102          {
    103            return ((FunctionalState) (IRTIM->CR & IRTIM_CR_EN));
   \                     IRTIM_GetStatus:
   \   000000 C652FF                LD        A, L:0x52ff
   \   000003 A401                  AND       A, #0x1
   \   000005 81                    RET
    104          }
    105          
    106          /**
    107            * @brief  Checks whether the IRTIM High Sink Open Drain buffer is Enabled or not.
    108            * @param  None
    109            * @retval FunctionalState : state of High Sink Open Drain buffer.
    110            *         This parameter can be: ENABLE or DISABLE.
    111            */
    112          

   \                                 In section .near_func.text, align 1
    113          FunctionalState IRTIM_GetHighSinkODStatus(void)
    114          {
    115            return ((FunctionalState)(IRTIM->CR & IRTIM_CR_HSEN));
   \                     IRTIM_GetHighSinkODStatus:
   \   000000 C652FF                LD        A, L:0x52ff
   \   000003 A402                  AND       A, #0x2
   \   000005 81                    RET
    116          }
    117          
    118          /**
    119            * @}
    120            */
    121          
    122          /**
    123            * @}
    124            */
    125          
    126          /******************* (C) COPYRIGHT 2010 STMicroelectronics *****END OF FILE****/

   Section sizes:

     Function/Label            Bytes
     --------------            -----
     IRTIM_DeInit                 5
     IRTIM_Cmd                   13
     IRTIM_HighSinkODCmd         13
     IRTIM_GetStatus              6
     IRTIM_GetHighSinkODStatus    6

 
 43 bytes in section .near_func.text
 
 43 bytes of CODE memory

Errors: none
Warnings: none
