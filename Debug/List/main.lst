###############################################################################
#                                                                             #
# IAR C/C++ Compiler V1.30.1.50036 for STM8             11/Mar/2014  21:04:21 #
# Copyright 2010-2011 IAR Systems AB.                                         #
#                                                                             #
#    Source file  =  F:\Skydrive\Final Design\Servo Motor                     #
#                    STM8L\Project\Discover\src\main.c                        #
#    Command line =  "F:\Skydrive\Final Design\Servo Motor                    #
#                    STM8L\Project\Discover\src\main.c" -e -Ol --no_cse       #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_cross_call --debug --code_model small --data_model  #
#                    medium -o "F:\Skydrive\Final Design\Servo Motor          #
#                    STM8L\Debug\Obj\" --dlib_config "D:\IAR                  #
#                    Systems\Embedded Workbench 6.0\stm8\LIB\dlstm8smn.h" -D  #
#                    STM8L15X_MD -lCN "F:\Skydrive\Final Design\Servo Motor   #
#                    STM8L\Debug\List\" --diag_suppress Pe177,Pe550 -I        #
#                    "F:\Skydrive\Final Design\Servo Motor                    #
#                    STM8L\Project\Discover\inc\" -I "F:\Skydrive\Final       #
#                    Design\Servo Motor STM8L\Libraries\STM8L15x_StdPeriph_Dr #
#                    iver\inc\" --vregs 16                                    #
#    List file    =  F:\Skydrive\Final Design\Servo Motor                     #
#                    STM8L\Debug\List\main.lst                                #
#    Object file  =  F:\Skydrive\Final Design\Servo Motor                     #
#                    STM8L\Debug\Obj\main.o                                   #
#                                                                             #
#                                                                             #
###############################################################################

F:\Skydrive\Final Design\Servo Motor STM8L\Project\Discover\src\main.c
      1          
      2          /* Includes ------------------------------------------------------------------*/
      3          #include "stm8l15x.h"
      4          
      5          /** @addtogroup STM8L15x_StdPeriph_Examples
      6            * @{
      7            */
      8          
      9          /** @addtogroup TIM1_PWMOutput
     10            * @{
     11            */
     12          
     13          /* Private typedef -----------------------------------------------------------*/
     14          /* Private define ------------------------------------------------------------*/
     15          #define TIM2_PERIOD             65535
     16          #define TIM2_PRESCALER              39999
     17          #define TIM2_REPTETION_COUNTER      0
     18          
     19          /* Private macro -------------------------------------------------------------*/
     20          /* Private variables ---------------------------------------------------------*/

   \                                 In section .near.data, align 1
     21          __IO uint16_t CCR1_Val = 30000;
   \                     CCR1_Val:
   \   000000 7530                  DC16 30000

   \                                 In section .near.data, align 1
     22          __IO uint16_t CCR2_Val = 16384;
   \                     CCR2_Val:
   \   000000 4000                  DC16 16384

   \                                 In section .near.data, align 1
     23          __IO uint16_t CCR3_Val = 8192;
   \                     CCR3_Val:
   \   000000 2000                  DC16 8192
     24          
     25          /* Private function prototypes -----------------------------------------------*/
     26          static void CLK_Config(void);
     27          static void GPIO_Config(void);
     28          static void TIM2_Config(void);
     29          /* Private functions ---------------------------------------------------------*/
     30          
     31          /**
     32            * @brief  Main program.
     33            * @param  None
     34            * @retval None
     35            */

   \                                 In section .near_func.text, align 1
     36          void main(void)
     37          {
     38             /* CLK configuration -------------------------------------------*/
     39            CLK_Config(); 
   \                     main:
   \   000000 CD0000                CALL      L:CLK_Config
     40          
     41             /* GPIO configuration -------------------------------------------*/
     42            GPIO_Config(); 
   \   000003 CD0000                CALL      L:GPIO_Config
     43            
     44             /* TIM1 configuration -------------------------------------------*/
     45            TIM2_Config();
   \   000006 CD0000                CALL      L:TIM2_Config
     46          
     47            /* Infinite loop */
     48            while (1)
   \                     ??main_0:
   \   000009 20FE                  JRA       L:??main_0
     49            {}
     50          }
     51          
     52          /**
     53            * @brief  Configure peripherals 
     54            */

   \                                 In section .near_func.text, align 1
     55          static void CLK_Config(void)
     56          {
     57            /* Enable TIM1 clock */
     58            CLK_PeripheralClockConfig(CLK_Peripheral_TIM2, ENABLE);
   \                     CLK_Config:
   \   000000 35010000              MOV       S:?b0, #0x1
   \   000004 4F                    CLR       A
   \   000005 CC0000                JP        L:CLK_PeripheralClockConfig
     59          }
     60          

   \                                 In section .near_func.text, align 1
     61          static void GPIO_Config(void)
     62          {
     63            /* GPIOD configuration: TIM1 channel 1 (PD2), channel 2 (PD4) and channel 3 (PD5) */
     64            GPIO_Init(GPIOB, GPIO_Pin_0, GPIO_Mode_Out_PP_Low_Fast);
   \                     GPIO_Config:
   \   000000 35E00000              MOV       S:?b0, #0xe0
   \   000004 A601                  LD        A, #0x1
   \   000006 AE5005                LDW       X, #0x5005
   \   000009 CD0000                CALL      L:GPIO_Init
     65            GPIO_Init(GPIOE, GPIO_Pin_7, GPIO_Mode_Out_PP_High_Fast);
   \   00000C 35F00000              MOV       S:?b0, #0xf0
   \   000010 A680                  LD        A, #0x80
   \   000012 AE5014                LDW       X, #0x5014
   \   000015 CC0000                JP        L:GPIO_Init
     66            //GPIO_SetBits(GPIOE, GPIO_Pin_7);
     67          }
     68          
     69          /**
     70            * @brief  Configure TIM1 peripheral 
     71            * @param  None
     72            * @retval None
     73            */

   \                                 In section .near_func.text, align 1
     74          static void TIM2_Config(void)
     75          {
     76            /*
     77            - TIM1CLK = 2 MHz
     78            - TIM1 counter clock = TIM1CLK / TIM1_PRESCALER+1 = 2 MHz/39999+1 = 50 Hz
     79            */
     80            /* Time base configuration */
     81           
     82          
     83            /*
     84            - The TIM1 CCR1 register value is equal to 3000: 
     85            - So the TIM1 Channel 1 generates a periodic signal with a frequency equal to 50 Hz.
     86            - PB0
     87            */
     88            /* PWM1 Mode configuration: Channel1 */
     89            TIM2_TimeBaseInit(TIM2_Prescaler_1, TIM2_CounterMode_Up, 39999);
   \                     TIM2_Config:
   \   000000 AE9C3F                LDW       X, #0x9c3f
   \   000003 3F00                  CLR       S:?b0
   \   000005 4F                    CLR       A
   \   000006 CD0000                CALL      L:TIM2_TimeBaseInit
     90            TIM2_OC1Init(TIM2_OCMode_PWM1, TIM2_OutputState_Enable, 0, TIM2_OCPolarity_High, TIM2_OCIdleState_Set);
   \   000009 35010000              MOV       S:?b2, #0x1
   \   00000D 3F00                  CLR       S:?b1
   \   00000F 5F                    CLRW      X
   \   000010 35010000              MOV       S:?b0, #0x1
   \   000014 A660                  LD        A, #0x60
   \   000016 CD0000                CALL      L:TIM2_OC1Init
     91            TIM2_OC1PreloadConfig(ENABLE);
   \   000019 A601                  LD        A, #0x1
   \   00001B CD0000                CALL      L:TIM2_OC1PreloadConfig
     92            TIM2_CtrlPWMOutputs(ENABLE);
   \   00001E A601                  LD        A, #0x1
   \   000020 CD0000                CALL      L:TIM2_CtrlPWMOutputs
     93            TIM2_SetCompare1(3000);
   \   000023 AE0BB8                LDW       X, #0xbb8
   \   000026 CD0000                CALL      L:TIM2_SetCompare1
     94            TIM2_Cmd(ENABLE);
   \   000029 A601                  LD        A, #0x1
   \   00002B CC0000                JP        L:TIM2_Cmd
     95          }
     96          
     97          #ifdef  USE_FULL_ASSERT
     98          
     99          void assert_failed(uint8_t* file, uint32_t line)
    100          {
    101            /* User can add his own implementation to report the file name and line number,
    102               ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
    103          
    104            /* Infinite loop */
    105            while (1)
    106            {}
    107          }
    108          #endif

   Section sizes:

     Function/Label Bytes
     -------------- -----
     CCR1_Val          2
     CCR2_Val          2
     CCR3_Val          2
     main             11
     CLK_Config        8
     GPIO_Config      24
     TIM2_Config      46

 
  6 bytes in section .near.data
 89 bytes in section .near_func.text
 
 89 bytes of CODE memory
  6 bytes of DATA memory

Errors: none
Warnings: none
