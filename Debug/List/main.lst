###############################################################################
#                                                                             #
# IAR C/C++ Compiler V1.30.1.50036 for STM8             14/Mar/2014  16:36:08 #
# Copyright 2010-2011 IAR Systems AB.                                         #
#                                                                             #
#    Source file  =  F:\Skydrive\Final Design\Servo Motor                     #
#                    STM8L\Project\Discover\src\main.c                        #
#    Command line =  "F:\Skydrive\Final Design\Servo Motor                    #
#                    STM8L\Project\Discover\src\main.c" -e -Ol --no_cse       #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_cross_call --debug --code_model small --data_model  #
#                    medium -o "F:\Skydrive\Final Design\Servo Motor          #
#                    STM8L\Debug\Obj\" --dlib_config "D:\IAR                  #
#                    Systems\Embedded Workbench 6.0\stm8\LIB\dlstm8smn.h" -D  #
#                    STM8L15X_MD -lCN "F:\Skydrive\Final Design\Servo Motor   #
#                    STM8L\Debug\List\" --diag_suppress Pe177,Pe550 -I        #
#                    "F:\Skydrive\Final Design\Servo Motor                    #
#                    STM8L\Project\Discover\inc\" -I "F:\Skydrive\Final       #
#                    Design\Servo Motor STM8L\Libraries\STM8L15x_StdPeriph_Dr #
#                    iver\inc\" --vregs 16                                    #
#    List file    =  F:\Skydrive\Final Design\Servo Motor                     #
#                    STM8L\Debug\List\main.lst                                #
#    Object file  =  F:\Skydrive\Final Design\Servo Motor                     #
#                    STM8L\Debug\Obj\main.o                                   #
#                                                                             #
#                                                                             #
###############################################################################

F:\Skydrive\Final Design\Servo Motor STM8L\Project\Discover\src\main.c
      1          
      2          /* Includes ------------------------------------------------------------------*/
      3          #include "stm8l15x.h"
      4          #include "stm8l15x_it.c"

   \                                 In section .near_func.text, align 1
   \   __interrupt void NonHandledInterrupt(void)
   \                     NonHandledInterrupt:
   \                     _interrupt_2:
   \   000000 20FE                  JRA       L:_interrupt_2

   \                                 In section .near_func.text, align 1
   \   __interrupt void TRAP_IRQHandler(void)
   \                     TRAP_IRQHandler:
   \                     _interrupt_1:
   \   000000 20FE                  JRA       L:_interrupt_1

   \                                 In section .near_func.text, align 1
   \   __interrupt void FLASH_IRQHandler(void)
   \                     FLASH_IRQHandler:
   \                     _interrupt_3:
   \   000000 20FE                  JRA       L:_interrupt_3

   \                                 In section .near_func.text, align 1
   \   __interrupt void DMA1_CHANNEL0_1_IRQHandler(void)
   \                     DMA1_CHANNEL0_1_IRQHandler:
   \                     _interrupt_4:
   \   000000 20FE                  JRA       L:_interrupt_4

   \                                 In section .near_func.text, align 1
   \   __interrupt void DMA1_CHANNEL2_3_IRQHandler(void)
   \                     DMA1_CHANNEL2_3_IRQHandler:
   \                     _interrupt_5:
   \   000000 20FE                  JRA       L:_interrupt_5

   \                                 In section .near_func.text, align 1
   \   __interrupt void RTC_IRQHandler(void)
   \                     RTC_IRQHandler:
   \                     _interrupt_6:
   \   000000 20FE                  JRA       L:_interrupt_6

   \                                 In section .near_func.text, align 1
   \   __interrupt void EXTIE_F_PVD_IRQHandler(void)
   \                     EXTIE_F_PVD_IRQHandler:
   \                     _interrupt_7:
   \   000000 20FE                  JRA       L:_interrupt_7

   \                                 In section .near_func.text, align 1
   \   __interrupt void EXTIB_IRQHandler(void)
   \                     EXTIB_IRQHandler:
   \                     _interrupt_8:
   \   000000 20FE                  JRA       L:_interrupt_8

   \                                 In section .near_func.text, align 1
   \   __interrupt void EXTID_IRQHandler(void)
   \                     EXTID_IRQHandler:
   \                     _interrupt_9:
   \   000000 20FE                  JRA       L:_interrupt_9

   \                                 In section .near_func.text, align 1
   \   __interrupt void EXTI0_IRQHandler(void)
   \                     EXTI0_IRQHandler:
   \                     _interrupt_10:
   \   000000 20FE                  JRA       L:_interrupt_10

   \                                 In section .near_func.text, align 1
   \   __interrupt void EXTI1_IRQHandler(void)
   \                     EXTI1_IRQHandler:
   \                     _interrupt_11:
   \   000000 80                    IRET

   \                                 In section .near_func.text, align 1
   \   __interrupt void EXTI2_IRQHandler(void)
   \                     EXTI2_IRQHandler:
   \                     _interrupt_12:
   \   000000 20FE                  JRA       L:_interrupt_12

   \                                 In section .near_func.text, align 1
   \   __interrupt void EXTI3_IRQHandler(void)
   \                     EXTI3_IRQHandler:
   \                     _interrupt_13:
   \   000000 20FE                  JRA       L:_interrupt_13

   \                                 In section .near_func.text, align 1
   \   __interrupt void EXTI4_IRQHandler(void)
   \                     EXTI4_IRQHandler:
   \                     _interrupt_14:
   \   000000 20FE                  JRA       L:_interrupt_14

   \                                 In section .near_func.text, align 1
   \   __interrupt void EXTI5_IRQHandler(void)
   \                     EXTI5_IRQHandler:
   \                     _interrupt_15:
   \   000000 20FE                  JRA       L:_interrupt_15

   \                                 In section .near_func.text, align 1
   \   __interrupt void EXTI6_IRQHandler(void)
   \                     EXTI6_IRQHandler:
   \                     _interrupt_16:
   \   000000 80                    IRET

   \                                 In section .near_func.text, align 1
   \   __interrupt void EXTI7_IRQHandler(void)
   \                     EXTI7_IRQHandler:
   \                     _interrupt_17:
   \   000000 20FE                  JRA       L:_interrupt_17

   \                                 In section .near_func.text, align 1
   \   __interrupt void LCD_IRQHandler(void)
   \                     LCD_IRQHandler:
   \                     _interrupt_18:
   \   000000 20FE                  JRA       L:_interrupt_18

   \                                 In section .near_func.text, align 1
   \   __interrupt void SWITCH_CSS_BREAK_DAC_IRQHandler(void)
   \                     SWITCH_CSS_BREAK_DAC_IRQHandler:
   \                     _interrupt_19:
   \   000000 20FE                  JRA       L:_interrupt_19

   \                                 In section .near_func.text, align 1
   \   __interrupt void ADC1_COMP_IRQHandler(void)
   \                     ADC1_COMP_IRQHandler:
   \                     _interrupt_20:
   \   000000 20FE                  JRA       L:_interrupt_20

   \                                 In section .near_func.text, align 1
   \   __interrupt void TIM2_UPD_OVF_TRG_BRK_IRQHandler(void)
   \                     TIM2_UPD_OVF_TRG_BRK_IRQHandler:
   \                     _interrupt_21:
   \   000000 20FE                  JRA       L:_interrupt_21

   \                                 In section .near_func.text, align 1
   \   __interrupt void TIM2_CAP_IRQHandler(void)
   \                     TIM2_CAP_IRQHandler:
   \                     _interrupt_22:
   \   000000 20FE                  JRA       L:_interrupt_22

   \                                 In section .near_func.text, align 1
   \   __interrupt void TIM3_UPD_OVF_TRG_BRK_IRQHandler(void)
   \                     TIM3_UPD_OVF_TRG_BRK_IRQHandler:
   \                     _interrupt_23:
   \   000000 20FE                  JRA       L:_interrupt_23

   \                                 In section .near_func.text, align 1
   \   __interrupt void TIM3_CAP_IRQHandler(void)
   \                     TIM3_CAP_IRQHandler:
   \                     _interrupt_24:
   \   000000 20FE                  JRA       L:_interrupt_24

   \                                 In section .near_func.text, align 1
   \   __interrupt void TIM1_UPD_OVF_TRG_COM_IRQHandler(void)
   \                     TIM1_UPD_OVF_TRG_COM_IRQHandler:
   \                     _interrupt_25:
   \   000000 20FE                  JRA       L:_interrupt_25

   \                                 In section .near_func.text, align 1
   \   __interrupt void TIM1_CAP_IRQHandler(void)
   \                     TIM1_CAP_IRQHandler:
   \                     _interrupt_26:
   \   000000 20FE                  JRA       L:_interrupt_26

   \                                 In section .near_func.text, align 1
   \   __interrupt void TIM4_UPD_OVF_TRG_IRQHandler(void)
   \                     TIM4_UPD_OVF_TRG_IRQHandler:
   \                     _interrupt_27:
   \   000000 20FE                  JRA       L:_interrupt_27

   \                                 In section .near_func.text, align 1
   \   __interrupt void SPI1_IRQHandler(void)
   \                     SPI1_IRQHandler:
   \                     _interrupt_28:
   \   000000 20FE                  JRA       L:_interrupt_28

   \                                 In section .near_func.text, align 1
   \   __interrupt void USART1_TX_IRQHandler(void)
   \                     USART1_TX_IRQHandler:
   \                     _interrupt_29:
   \   000000 8A                    PUSH      CC
   \   000001 84                    POP       A
   \   000002 A4BF                  AND       A, #0xbf
   \   000004 88                    PUSH      A
   \   000005 86                    POP       CC
   \   000006 CD0000                CALL      L:?push_l0
   \   000009 CD0000                CALL      L:?push_l1
   \   00000C A680                  LD        A, #0x80
   \   00000E AE500A                LDW       X, #0x500a
   \   000011 CD0000                CALL      L:GPIO_SetBits
   \   000014 CD0000                CALL      L:?pop_l1
   \   000017 CD0000                CALL      L:?pop_l0
   \   00001A 80                    IRET

   \                                 In section .near_func.text, align 1
   \   __interrupt void USART1_RX_IRQHandler(void)
   \                     USART1_RX_IRQHandler:
   \                     _interrupt_30:
   \   000000 8A                    PUSH      CC
   \   000001 84                    POP       A
   \   000002 A4BF                  AND       A, #0xbf
   \   000004 88                    PUSH      A
   \   000005 86                    POP       CC
   \   000006 CD0000                CALL      L:?push_l0
   \   000009 CD0000                CALL      L:?push_l1
   \   00000C A680                  LD        A, #0x80
   \   00000E AE5014                LDW       X, #0x5014
   \   000011 CD0000                CALL      L:GPIO_SetBits
   \   000014 AE5230                LDW       X, #0x5230
   \   000017 CD0000                CALL      L:USART_ReceiveData8
   \   00001A AE5230                LDW       X, #0x5230
   \   00001D CD0000                CALL      L:USART_SendData8
   \   000020 CD0000                CALL      L:?pop_l1
   \   000023 CD0000                CALL      L:?pop_l0
   \   000026 80                    IRET

   \                                 In section .near_func.text, align 1
   \   __interrupt void I2C1_IRQHandler(void)
   \                     I2C1_IRQHandler:
   \                     _interrupt_31:
   \   000000 20FE                  JRA       L:_interrupt_31
      5          
      6          /* Private typedef -----------------------------------------------------------*/
      7          /* Private define ------------------------------------------------------------*/
      8          #define TIM2_PERIOD             65535
      9          #define TIM2_PRESCALER              39999
     10          #define TIM2_REPTETION_COUNTER      0
     11          
     12          /* Private macro -------------------------------------------------------------*/
     13          /* Private variables ---------------------------------------------------------*/

   \                                 In section .near.data, align 1
     14          __IO uint16_t CCR1_Val = 30000;
   \                     CCR1_Val:
   \   000000 7530                  DC16 30000

   \                                 In section .near.data, align 1
     15          __IO uint16_t CCR2_Val = 16384;
   \                     CCR2_Val:
   \   000000 4000                  DC16 16384

   \                                 In section .near.data, align 1
     16          __IO uint16_t CCR3_Val = 8192;
   \                     CCR3_Val:
   \   000000 2000                  DC16 8192
     17          
     18          /* Private function prototypes -----------------------------------------------*/
     19          static void CLK_Config(void);
     20          static void GPIO_Config(void);
     21          static void TIM2_Config(void);
     22          static void USART_Config(void);
     23          
     24          void USART_SendByte(uint8_t data);
     25          void USART_SendString(uint8_t* Data, uint16_t len);
     26          uint8_t USART_ReceiveByte(void);
     27          void Delay(int);
     28          /* Private functions ---------------------------------------------------------*/
     29          
     30          /**
     31            * @brief  Main program.
     32            * @param  None
     33            * @retval None
     34            */

   \                                 In section .near_func.text, align 1
     35          void main(void)
     36          {
     37             
     38            CLK_Config(); 
   \                     main:
   \   000000 CD0000                CALL      L:CLK_Config
     39            GPIO_Config();   
   \   000003 CD0000                CALL      L:GPIO_Config
     40            TIM2_Config();  
   \   000006 CD0000                CALL      L:TIM2_Config
     41            USART_Config();
   \   000009 CD0000                CALL      L:USART_Config
     42            
     43            enableInterrupts();
   \   00000C 9A                    rim
     44            
     45            USART_SendString("Test\n", sizeof("Test\n"));
   \   00000D 90AE0006              LDW       Y, #0x6
   \   000011 AE0000                LDW       X, #`?<Constant "Test\\n">`
   \   000014 CD0000                CALL      L:USART_SendString
     46            //delay_10us(100);
     47            //USART_SendByte("\n");
     48            Delay(100);
   \   000017 AE0064                LDW       X, #0x64
   \   00001A CD0000                CALL      L:Delay
     49            uint8_t Buf = 0;
   \   00001D 4F                    CLR       A
     50            
     51            
     52            while (1)
   \                     ??main_0:
   \   00001E 20FE                  JRA       L:??main_0
     53            {
     54          //    USART_SendString("Test\n", sizeof("Test\n"));
     55          //    while (USART_GetFlagStatus(USART1, USART_FLAG_TC) == RESET);
     56              
     57          //    Buf=USART_ReceiveData8(USART1);
     58          //    while(USART_GetFlagStatus(USART1, USART_FLAG_OR) == SET);
     59          //    if(Buf != 0)
     60          //    {
     61          //      USART_SendData8(USART1, Buf);
     62          //    }
     63            }
     64          }
     65          
     66          /**
     67            * @brief  Configure peripherals 
     68            */

   \                                 In section .near_func.text, align 1
     69          static void CLK_Config(void)
     70          {
     71            /* Enable TIM1 clock */
     72            CLK_PeripheralClockConfig(CLK_Peripheral_TIM2, ENABLE);
   \                     CLK_Config:
   \   000000 35010000              MOV       S:?b0, #0x1
   \   000004 4F                    CLR       A
   \   000005 CC0000                JP        L:CLK_PeripheralClockConfig
     73          }
     74          

   \                                 In section .near_func.text, align 1
     75          static void GPIO_Config(void)
     76          {
     77            /* GPIOD configuration: TIM1 channel 1 (PD2), channel 2 (PD4) and channel 3 (PD5) */
     78            GPIO_Init(GPIOB, GPIO_Pin_0, GPIO_Mode_Out_PP_Low_Fast);
   \                     GPIO_Config:
   \   000000 35E00000              MOV       S:?b0, #0xe0
   \   000004 A601                  LD        A, #0x1
   \   000006 AE5005                LDW       X, #0x5005
   \   000009 CD0000                CALL      L:GPIO_Init
     79            GPIO_Init(GPIOE, GPIO_Pin_7, GPIO_Mode_Out_PP_Low_Fast);  //Text int
   \   00000C 35E00000              MOV       S:?b0, #0xe0
   \   000010 A680                  LD        A, #0x80
   \   000012 AE5014                LDW       X, #0x5014
   \   000015 CD0000                CALL      L:GPIO_Init
     80            GPIO_Init(GPIOC, GPIO_Pin_7, GPIO_Mode_Out_PP_Low_Fast);  //Receive int
   \   000018 35E00000              MOV       S:?b0, #0xe0
   \   00001C A680                  LD        A, #0x80
   \   00001E AE500A                LDW       X, #0x500a
   \   000021 CC0000                JP        L:GPIO_Init
     81            //GPIO_SetBits(GPIOE, GPIO_Pin_7);
     82          }
     83          

   \                                 In section .near_func.text, align 1
     84          static void TIM2_Config(void)
     85          {
     86            /*
     87            - TIM1CLK = 2 MHz
     88            - TIM1 counter clock = TIM1CLK / TIM1_PRESCALER+1 = 2 MHz/39999+1 = 50 Hz
     89            */
     90            /*
     91            - The TIM1 CCR1 register value is equal to 3000: 
     92            - So the TIM1 Channel 1 generates a periodic signal with a frequency equal to 50 Hz.
     93            - PB0
     94            */
     95            /* PWM1 Mode configuration: Channel1 */
     96            TIM2_TimeBaseInit(TIM2_Prescaler_1, TIM2_CounterMode_Up, 39999);
   \                     TIM2_Config:
   \   000000 AE9C3F                LDW       X, #0x9c3f
   \   000003 3F00                  CLR       S:?b0
   \   000005 4F                    CLR       A
   \   000006 CD0000                CALL      L:TIM2_TimeBaseInit
     97            TIM2_OC1Init(TIM2_OCMode_PWM1, TIM2_OutputState_Enable, 0, TIM2_OCPolarity_High, TIM2_OCIdleState_Set);
   \   000009 35010000              MOV       S:?b2, #0x1
   \   00000D 3F00                  CLR       S:?b1
   \   00000F 5F                    CLRW      X
   \   000010 35010000              MOV       S:?b0, #0x1
   \   000014 A660                  LD        A, #0x60
   \   000016 CD0000                CALL      L:TIM2_OC1Init
     98            TIM2_OC1PreloadConfig(ENABLE);
   \   000019 A601                  LD        A, #0x1
   \   00001B CD0000                CALL      L:TIM2_OC1PreloadConfig
     99            TIM2_CtrlPWMOutputs(ENABLE);
   \   00001E A601                  LD        A, #0x1
   \   000020 CD0000                CALL      L:TIM2_CtrlPWMOutputs
    100            TIM2_SetCompare1(3000);
   \   000023 AE0BB8                LDW       X, #0xbb8
   \   000026 CD0000                CALL      L:TIM2_SetCompare1
    101            TIM2_Cmd(ENABLE);
   \   000029 A601                  LD        A, #0x1
   \   00002B CC0000                JP        L:TIM2_Cmd
    102          }
    103          

   \                                 In section .near_func.text, align 1
    104          static void USART_Config(void)
    105          {
    106            //PC3 Send
    107            //PC2 receive
    108            SYSCFG_REMAPPinConfig(REMAP_Pin_USART1TxRxPortA, ENABLE);   //Map USART to PortA
   \                     USART_Config:
   \   000000 A601                  LD        A, #0x1
   \   000002 AE011C                LDW       X, #0x11c
   \   000005 CD0000                CALL      L:SYSCFG_REMAPPinConfig
    109            
    110            GPIO_Init(GPIOA,GPIO_Pin_2,GPIO_Mode_In_PU_No_IT);    //USART_RX
   \   000008 35400000              MOV       S:?b0, #0x40
   \   00000C A604                  LD        A, #0x4
   \   00000E AE5000                LDW       X, #0x5000
   \   000011 CD0000                CALL      L:GPIO_Init
    111            //GPIO_Init(GPIOA,GPIO_Pin_3,GPIO_Mode_Out_PP_Low_Fast);     //USART_TX
    112            GPIO_ExternalPullUpConfig(GPIOA, GPIO_Pin_3, ENABLE);        //Let this port been controlled by external signal
   \   000014 35010000              MOV       S:?b0, #0x1
   \   000018 A608                  LD        A, #0x8
   \   00001A AE5000                LDW       X, #0x5000
   \   00001D CD0000                CALL      L:GPIO_ExternalPullUpConfig
    113            
    114            CLK_PeripheralClockConfig(CLK_Peripheral_USART1, ENABLE);
   \   000020 35010000              MOV       S:?b0, #0x1
   \   000024 A605                  LD        A, #0x5
   \   000026 CD0000                CALL      L:CLK_PeripheralClockConfig
    115            //GPIO_ExternalPullUpConfig(GPIOA, GPIO_Pin_2|GPIO_Pin_3, ENABLE);
    116            USART_DeInit(USART1);  
   \   000029 AE5230                LDW       X, #0x5230
   \   00002C CD0000                CALL      L:USART_DeInit
    117            USART_Init(USART1,
    118                       9600, 
    119                       USART_WordLength_8b,
    120                       USART_StopBits_1,
    121                       USART_Parity_No,
    122                       (USART_Mode_TypeDef)(USART_Mode_Rx|USART_Mode_Tx));
   \   00002F 350C0000              MOV       S:?b6, #0xc
   \   000033 3F00                  CLR       S:?b5
   \   000035 3F00                  CLR       S:?b4
   \   000037 4F                    CLR       A
   \   000038 AE2580                LDW       X, #0x2580
   \   00003B BF00                  LDW       S:?w1, X
   \   00003D 5F                    CLRW      X
   \   00003E BF00                  LDW       S:?w0, X
   \   000040 AE5230                LDW       X, #0x5230
   \   000043 CD0000                CALL      L:USART_Init
    123            USART_ClockInit(USART1,USART_Clock_Disable,USART_CPOL_Low,USART_CPHA_2Edge,USART_LastBit_Disable);
   \   000046 3F00                  CLR       S:?b2
   \   000048 35020000              MOV       S:?b1, #0x2
   \   00004C 3F00                  CLR       S:?b0
   \   00004E 4F                    CLR       A
   \   00004F AE5230                LDW       X, #0x5230
   \   000052 CD0000                CALL      L:USART_ClockInit
    124            USART_ClearITPendingBit(USART1,USART_IT_RXNE);
   \   000055 90AE0255              LDW       Y, #0x255
   \   000059 AE5230                LDW       X, #0x5230
   \   00005C CD0000                CALL      L:USART_ClearITPendingBit
    125            //USART_ITConfig(USART1, (USART_FLAG_TypeDef)(USART_IT_TXE | USART_IT_RXNE), ENABLE);
    126            USART_ITConfig(USART1, USART_IT_RXNE, ENABLE);
   \   00005F A601                  LD        A, #0x1
   \   000061 90AE0255              LDW       Y, #0x255
   \   000065 AE5230                LDW       X, #0x5230
   \   000068 CD0000                CALL      L:USART_ITConfig
    127            USART_Cmd(USART1, ENABLE);
   \   00006B A601                  LD        A, #0x1
   \   00006D AE5230                LDW       X, #0x5230
   \   000070 CC0000                JP        L:USART_Cmd
    128          }
    129          
    130          

   \                                 In section .near_func.text, align 1
    131          void USART_SendByte(uint8_t data)
    132          {
    133            USART_SendData8(USART1, (unsigned char)data);
   \                     USART_SendByte:
   \   000000 AE5230                LDW       X, #0x5230
   \   000003 CD0000                CALL      L:USART_SendData8
    134            /* Loop until the end of transmission */
    135            while(USART_GetFlagStatus(USART1, USART_FLAG_TXE) == RESET);
   \                     ??USART_SendByte_0:
   \   000006 90AE0080              LDW       Y, #0x80
   \   00000A AE5230                LDW       X, #0x5230
   \   00000D CD0000                CALL      L:USART_GetFlagStatus
   \   000010 A100                  CP        A, #0x0
   \   000012 27F2                  JREQ      L:??USART_SendByte_0
    136          }
   \   000014 81                    RET
    137          

   \                                 In section .near_func.text, align 1
    138          void USART_SendString(uint8_t* Data, uint16_t len)
    139          {
   \                     USART_SendString:
   \   000000 CD0000                CALL      L:?push_l2
   \   000003 CD0000                CALL      L:?push_w6
   \   000006 BF00                  LDW       S:?w6, X
   \   000008 90BF00                LDW       S:?w5, Y
    140            //unit16_t i = 0;
    141            for(int i = 0; i < len; i++)
   \   00000B 3F00                  CLR       S:?b9
   \   00000D 3F00                  CLR       S:?b8
   \   00000F 200F                  JRA       L:??USART_SendString_0
    142            {
    143              USART_SendByte(Data[i]);  
   \                     ??USART_SendString_1:
   \   000011 BE00                  LDW       X, S:?w4
   \   000013 72BB0000              ADDW      X, S:?w6
   \   000017 F6                    LD        A, (X)
   \   000018 CD0000                CALL      L:USART_SendByte
    144            }
   \   00001B BE00                  LDW       X, S:?w4
   \   00001D 5C                    INCW      X
   \   00001E BF00                  LDW       S:?w4, X
   \                     ??USART_SendString_0:
   \   000020 BE00                  LDW       X, S:?w4
   \   000022 B300                  CPW       X, S:?w5
   \   000024 25EB                  JRC       L:??USART_SendString_1
    145          }
   \   000026 CC0000                JP        L:?epilogue_l2_w6
    146          

   \                                 In section .near_func.text, align 1
    147          uint8_t USART_ReceiveByte(void)
    148          {
    149            uint8_t USART_RX_BUF;
    150            while(USART_GetFlageStatus(USART1, USART_FLAG_RXNE) == RESET);
   \                     USART_ReceiveByte:
   \                     ??USART_ReceiveByte_0:
   \   000000 90AE0020              LDW       Y, #0x20
   \   000004 AE5230                LDW       X, #0x5230
   \   000007 CD0000                CALL      L:USART_GetFlageStatus
   \   00000A 5D                    TNZW      X
   \   00000B 27F3                  JREQ      L:??USART_ReceiveByte_0
    151            USART_RX_BUF = USART_ReceiveData8(USART1);
   \   00000D AE5230                LDW       X, #0x5230
   \   000010 CC0000                JP        L:USART_ReceiveData8
    152            return USART_RX_BUF;
    153          }
    154          

   \                                 In section .near_func.text, align 1
    155          void Delay(int time)
    156          {
   \                     Delay:
   \   000000 BF00                  LDW       S:?w0, X
    157            for(int i = 0; i < time; i++)
   \   000002 905F                  CLRW      Y
   \   000004 2008                  JRA       L:??Delay_0
    158              for(int j = 0; j < 100; j++);
   \                     ??Delay_1:
   \   000006 5C                    INCW      X
   \                     ??Delay_2:
   \   000007 A30064                CPW       X, #0x64
   \   00000A 2FFA                  JRSLT     L:??Delay_1
   \   00000C 905C                  INCW      Y
   \                     ??Delay_0:
   \   00000E 90B300                CPW       Y, S:?w0
   \   000011 2E03                  JRSGE     L:??Delay_3
   \   000013 5F                    CLRW      X
   \   000014 20F1                  JRA       L:??Delay_2
    159          }
   \                     ??Delay_3:
   \   000016 81                    RET

   \                                 In section .near.rodata, align 1
   \                     `?<Constant "Test\\n">`:
   \   000000 546573740A00          DC8 "Test\012"
    160          
    161          
    162          #ifdef  USE_FULL_ASSERT
    163          
    164          void assert_failed(uint8_t* file, uint32_t line)
    165          {
    166            /* User can add his own implementation to report the file name and line number,
    167               ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
    168          
    169            /* Infinite loop */
    170            while (1)
    171            {}
    172          }
    173          #endif

   Section sizes:

     Function/Label                 Bytes
     --------------                 -----
     NonHandledInterrupt               2
     TRAP_IRQHandler                   2
     FLASH_IRQHandler                  2
     DMA1_CHANNEL0_1_IRQHandler        2
     DMA1_CHANNEL2_3_IRQHandler        2
     RTC_IRQHandler                    2
     EXTIE_F_PVD_IRQHandler            2
     EXTIB_IRQHandler                  2
     EXTID_IRQHandler                  2
     EXTI0_IRQHandler                  2
     EXTI1_IRQHandler                  1
     EXTI2_IRQHandler                  2
     EXTI3_IRQHandler                  2
     EXTI4_IRQHandler                  2
     EXTI5_IRQHandler                  2
     EXTI6_IRQHandler                  1
     EXTI7_IRQHandler                  2
     LCD_IRQHandler                    2
     SWITCH_CSS_BREAK_DAC_IRQHandler
                                       2
     ADC1_COMP_IRQHandler              2
     TIM2_UPD_OVF_TRG_BRK_IRQHandler
                                       2
     TIM2_CAP_IRQHandler               2
     TIM3_UPD_OVF_TRG_BRK_IRQHandler
                                       2
     TIM3_CAP_IRQHandler               2
     TIM1_UPD_OVF_TRG_COM_IRQHandler
                                       2
     TIM1_CAP_IRQHandler               2
     TIM4_UPD_OVF_TRG_IRQHandler       2
     SPI1_IRQHandler                   2
     USART1_TX_IRQHandler             27
     USART1_RX_IRQHandler             39
     I2C1_IRQHandler                   2
     CCR1_Val                          2
     CCR2_Val                          2
     CCR3_Val                          2
     main                             32
     CLK_Config                        8
     GPIO_Config                      36
     TIM2_Config                      46
     USART_Config                    115
     USART_SendByte                   21
     USART_SendString                 41
     USART_ReceiveByte                19
     Delay                            23
     ?<Constant "Test\n">              6

 
   6 bytes in section .near.data
   6 bytes in section .near.rodata
 463 bytes in section .near_func.text
 
 463 bytes of CODE  memory
   6 bytes of CONST memory
   6 bytes of DATA  memory

Errors: none
Warnings: 1
